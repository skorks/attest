#!/usr/bin/env ruby

#need this so that bundler doesn't throw an error after library has been installed as gem and the executable is called
ENV["BUNDLE_GEMFILE"] = File.expand_path(File.dirname(__FILE__) + "/../Gemfile")
require "rubygems"
require "bundler"
Bundler.setup(:default)
require "trollop"

opts = Trollop::options do
  banner <<-EOS
Usage:
       attest [options] <filenames>+
where [options] are:
EOS

  opt :file, "Ruby file with inline tests that should be executed", :type => String, :default => nil
  opt :directory, "Directory with ruby files which contain inline tests to be executed", :type => String, :default => nil
  opt :testdouble, "The identifier of the test double framework to use", :type => String, :default => "mocha"
end
Trollop::die :file, "Must exist" unless File.exist?(opts[:file]) if opts[:file]
Trollop::die :directory, "Must exist" unless File.exist?(opts[:directory]) && File.directory?(opts[:directory]) if opts[:directory]

ENV["attest"] = "true"
require File.expand_path(File.dirname(__FILE__) + "/../lib/attest")

Attest.configure do |config|
  config.output_writer = Attest::Output::BasicOutputWriter.new
  config.testdouble = opts[:testdouble] || "mocha"
end

if Attest.config.testdouble == "mocha"
  Bundler.setup(:development)
  require "mocha_standalone"
  Attest::ExecutionContext.include(Mocha::API) # need this so that methods like stub() and mock() can be accessed directly from the execution context
end

Attest::TestLoader.load_tests_from(opts[:file], opts[:directory])
Attest.output_writer.summary
ENV["attest"] = nil

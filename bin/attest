#!/usr/bin/env ruby

#need this so that bundler doesn't throw an error after library has been installed as gem and the executable is called
ENV["BUNDLE_GEMFILE"] = File.expand_path(File.dirname(__FILE__) + "/../Gemfile")
require "rubygems"
require "bundler/setup"

require "trollop"
require File.expand_path(File.dirname(__FILE__) + "/../lib/attest")

opts = Trollop::options do
  banner <<-EOS
Usage:
       attest [options] <filenames>+
where [options] are:
EOS

  opt :file, "Ruby file with inline tests that should be executed", :type => String, :default => nil
  opt :directory, "Directory with ruby files which contain inline tests to be executed", :type => String, :default => nil
  opt :testdouble, "The identifier of the test double framework to use", :type => String, :default => "mocha"
  opt :outputwriter, "The output writer to use", :type => String, :default => "basic"
end
Trollop::die :file, "Must exist" unless File.exist?(opts[:file]) if opts[:file]
Trollop::die :directory, "Must exist" unless File.exist?(opts[:directory]) && File.directory?(opts[:directory]) if opts[:directory]

#Attest.configure do |config|
  #config.output_writer = Attest::OutputWriterConfigurator.configure(opts[:outputwriter])
  #config.testdouble = Attest::TestDoubleConfigurator.configure(opts[:testdouble])
  #config.possible_tests = Attest::PossibleTestsConfigurator.configure([opts[:file], opts[:directory]])
#end

#Attest::TestLoader.execute
puts Attest::PossibleTestsConfigurator.configure([opts[:file], opts[:directory]])


interface = Attest::CliInterface.new(opts)
interface.configure
interface.load_tests
